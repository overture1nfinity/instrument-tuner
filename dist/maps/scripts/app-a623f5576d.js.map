{"version":3,"sources":["scripts/app-a623f5576d.js"],"names":["angular","module","component","controller","controllerAs","templateUrl","this","version","transclude","AudioMathFactory","_","pitchDetect","calculatePitchDelta","refFreq","freq","cents","Math","log2","calculateAverageSignal","samples","sampleRate","nfftSize","signal","Infinity","Float32Array","maxMagnitude","i","length","s","factory","AudioStateFactory","AUDIO_CFG","mediaSource","stream","appProcessor","pitch","volumePct","clipPct","clipping","pitchDelta","refPitch","note","TONE_NAMES","noteNum","shouldInit","bindings","instance","tplScope","ReferencePitchMonitorController","$scope","AudioMath","audioState","ctrl","prevInputFreq","$on","e","data","inputFreq","_default","SIGNAL_RANGE","min","autoCorrelate","SAMPLE_RATE","isNaN","frequencyFromNoteNumber","toFixed","abs","PITCH_DELTA_ABSOLUTE_THRESHOLD","noteFromPitch","NaN","$digest","DbGaugeController","Canvas2DHandler","c2dh","canvasWidth","canvasHeight","volumePosRange","clipLinePosPct","clipColor","volumeColor","clip","onCanvasSizeChange","canvas","width","height","max","init","el","HTMLCanvasElement","setContext","getContext","draw","timeStamp","beginDraw","drawLine","clampedVolumePct","drawRect","endDraw","DbGaugeLink","$el","$attrs","$ctrl","console","error","directive","link","restrict","scope","AppController","getUserMedia","audioContext","Alerts","alerts","viewAlerts","enableMicAlert","notFoundAlert","notSupportedAlert","notAllowedAlert","unknownAlert","prevAudioSignal","initAlerts","addAlert","gUMSuccess","mediaSourceState","createMediaStreamSource","createScriptProcessor","FFT_SIZE","onaudioprocess","onAudioProcess","connect","destination","close","open","gUMError","err","name","$onInit","selectInput","call","navigator","audio","mandatory","googEchoCancellation","googAutoGainControl","googNoiseSuppression","googHighpassFilter","inputBuffer","getChannelData","avgSignal","NFFT_SIZE","SMOOTHING_CONSTANT","$broadcast","requestAnimationFrame","_ctx","_rafId","ctx","CanvasRenderingContext2D","Object","create","clear","clearRect","x","y","w","h","fillStyle","fillRect","x1","y1","x2","y2","beginPath","moveTo","lineTo","strokeStyle","stroke","closePath","rafCb","service","AlertsService","srvc","type","closeable","additionalClasses","undefined","alert","id","show","push","remove","removeAlert","forEach","splice","openAlert","closeAlert","openAll","map","closeAll","removeAll","frequency","log","round","pow","centsOffFromPitch","floor","MIN_SAMPLES","GOOD_ENOUGH_CORRELATION","buf","SIZE","MAX_SAMPLES","best_offset","best_correlation","rms","foundGoodCorrelation","correlations","Array","val","sqrt","lastCorrelation","offset","correlation","window","constant","webkitRequestAnimationFrame","AudioContext","webkitAudioContext","mozAudioContext","runBlock","$log","run","routerConfig","$stateProvider","$urlRouterProvider","state","url","otherwise","config","configBlock","$locationProvider","$logProvider","html5Mode","debugEnabled","$templateCache","put"],"mappings":"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","file":"scripts/app-a623f5576d.js","sourcesContent":["(function() {\r\n    'use strict';\r\n  \r\n    angular.module('common', [\r\n        'lib',\r\n        'ui.bootstrap',\r\n    ]);\r\n  \r\n})();\r\n\n(function() {\r\n    'use strict';\r\n  \r\n    angular.module('common').component('pageFooter', {\r\n      controller: PageFooterController,\r\n      controllerAs: 'vm',\r\n      templateUrl: 'common/components/page.collection/page-footer/page-footer.template.html',\r\n    });\r\n  \r\n    \r\n    /* istanbul ignore next */\r\n    function PageFooterController() {}\r\n  \r\n})();\r\n\n(function() {\r\n    'use strict';\r\n  \r\n    angular.module('common').component('pageHeader', {\r\n      controller: PageHeaderController,\r\n      controllerAs: 'vm',\r\n      templateUrl: 'common/components/page.collection/page-header/page-header.template.html',\r\n      transclude: true,\r\n    });\r\n  \r\n    \r\n    /* istanbul ignore next */\r\n    function PageHeaderController() {\r\n      this.version = 'v0.0.1';\r\n    }\r\n  \r\n})();\r\n\n(function() {\r\n    'use strict';\r\n  \r\n    angular.module('common').component('pageContent', {\r\n      controller: PageContentController,\r\n      controllerAs: 'vm',\r\n      templateUrl: 'common/components/page.collection/page-content/page-content.template.html',\r\n      transclude: true,\r\n    });\r\n  \r\n    \r\n    /* istanbul ignore next */\r\n    function PageContentController() {}\r\n  \r\n})();\r\n\n(function() {\r\n    'use strict';\r\n  \r\n    angular.module('common').component('page', {\r\n      controller: PageController,\r\n      controllerAs: 'vm',\r\n      templateUrl: 'common/components/page.collection/page/page.template.html',\r\n      transclude: true,\r\n    });\r\n  \r\n    \r\n    /* istanbul ignore next */\r\n    function PageController() {}\r\n  \r\n})();\r\n\n(function() {\r\n    'use strict';\r\n  \r\n    angular.module('lib', []);\r\n  \r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular.module('lib').factory('AudioMath', AudioMathFactory);\r\n\r\n    \r\n    function AudioMathFactory(_, pitchDetect) {\r\n\r\n        return {\r\n            /**\r\n             * @summary Calculates the amount of cents a frequency is off of a reference pitch.\r\n             * @description\r\n             * Uses this formula: n = 1200*log2(b/a) -- 'a' and 'b' are the 2 subject frequencies.\r\n             * @param {number} refFreq The frequency of the reference pitch.\r\n             * @param {number} freq The subject frequency in Hz.\r\n             * @returns {number || null} Null if something went wrong, else cent value.\r\n             */\r\n            calculatePitchDelta: function(refFreq, freq) {\r\n                var cents = null;\r\n\r\n                if(refFreq && freq) {\r\n                    if(refFreq !== freq) {\r\n                        cents = 1200*Math.log2(refFreq / freq) * -1; // 100 cents should be the maximum output\r\n                    }\r\n\r\n                    else {\r\n                        cents = 0; // no difference\r\n                    }\r\n                }\r\n\r\n                return cents;\r\n            },\r\n\r\n            /**\r\n             * @summary Calculates the average signal from a Float32Array of signal values.\r\n             * @param {Float32Array} samples The samples of signal data to calculate the average of.\r\n             * @param {number} sampleRate Sample rate.\r\n             * @param {number} nfftSize 1/2 FFT size. Found in the AnalyserNode of the Web Audio API.\r\n             * @returns {float} The average signal from samples.\r\n             */\r\n            calculateAverageSignal: function(samples, sampleRate, nfftSize) {\r\n                var signal = -Infinity;\r\n\r\n                if(samples instanceof Float32Array) {\r\n                    var maxMagnitude = -Infinity;\r\n\r\n                    for(var i = 0; i < samples.length; i++) {\r\n                        var s = samples[i];\r\n                        if(maxMagnitude < s) maxMagnitude = s;\r\n                    }\r\n\r\n                    signal = (maxMagnitude * (sampleRate / nfftSize)) / 10\r\n                }\r\n\r\n                return signal;\r\n            },\r\n\r\n        };\r\n    }\r\n\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular.module('common').factory('audioState', AudioStateFactory);\r\n\r\n    \r\n    /* istanbul ignore next */\r\n    function AudioStateFactory(AUDIO_CFG) {\r\n        return {\r\n            mediaSource: {\r\n                stream: null,\r\n                appProcessor: null,\r\n            },\r\n            signal: null,\r\n            pitch: null, // Hz\r\n            volumePct: null,\r\n            clipPct: null,\r\n            clipping: null,\r\n            pitchDelta: 0, // cents\r\n            refPitch: {\r\n                note: AUDIO_CFG.TONE_NAMES[0],\r\n                noteNum: null,\r\n                shouldInit: true, // this property will only be defined for the first update cycle / tick\r\n            },\r\n        };\r\n    }\r\n    \r\n})();\r\n\n(function() {\r\n    'use strict';\r\n  \r\n    angular.module('common').component('alerts', {\r\n      controller: AlertsController,\r\n      controllerAs: 'vm',\r\n      templateUrl: 'common/components/alerts/alerts.template.html',\r\n      bindings: {\r\n        instance: '<',\r\n        tplScope: '<',\r\n      },\r\n    });\r\n  \r\n    \r\n    /* istanbul ignore next */\r\n    function AlertsController() {}\r\n  \r\n})();\r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular.module('app', [\r\n    'ui.router',\r\n    'ui.bootstrap',\r\n    'common',\r\n  ]);\r\n\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n  \r\n    angular.module('app').component('referencePitchMonitor', {\r\n      controller: ReferencePitchMonitorController,\r\n      controllerAs: 'vm',\r\n      templateUrl: 'app/components/reference-pitch-monitor/reference-pitch-monitor.template.html',\r\n    });\r\n  \r\n    \r\n    function ReferencePitchMonitorController($scope, AUDIO_CFG, AudioMath, audioState, pitchDetect) {\r\n      var ctrl = this;\r\n\r\n      $scope.audioState = audioState; // isolated scope\r\n      this.prevInputFreq = 0;\r\n\r\n      $scope.$on('updateRpm', function(e, data) {\r\n        var inputFreq = audioState.signal;\r\n        var _default = false;\r\n        \r\n        if(inputFreq >= AUDIO_CFG.SIGNAL_RANGE.min) {\r\n\r\n            var pitch = pitchDetect.autoCorrelate(data.samples, AUDIO_CFG.SAMPLE_RATE);\r\n\r\n            if(!isNaN(pitch) && pitch > -1) {\r\n              if(!isNaN(audioState.refPitch.noteNum) && !audioState.refPitch.shouldInit) {\r\n                audioState.pitchDelta = AudioMath.calculatePitchDelta(\r\n                  pitchDetect.frequencyFromNoteNumber(audioState.refPitch.noteNum),\r\n                  pitch).toFixed(1);\r\n              }\r\n              \r\n              if(\r\n                audioState.refPitch.shouldInit || \r\n                isNaN(audioState.refPitch.noteNum) || \r\n                !audioState.refPitch.note || \r\n                Math.abs(audioState.pitchDelta) >= AUDIO_CFG.PITCH_DELTA_ABSOLUTE_THRESHOLD) {\r\n  \r\n                  audioState.refPitch.noteNum = pitchDetect.noteFromPitch(pitch);\r\n                  audioState.refPitch.note = (!isNaN(audioState.refPitch.noteNum) && audioState.refPitch.noteNum > -1) ? AUDIO_CFG.TONE_NAMES[(audioState.refPitch.noteNum % 12)+1] : AUDIO_CFG.TONE_NAMES[0];\r\n                  audioState.refPitch.shouldInit = false;\r\n              }\r\n  \r\n              audioState.pitch = pitch;\r\n              ctrl.prevInputFreq = inputFreq;\r\n            }\r\n\r\n            else _default = true;\r\n\r\n        }\r\n\r\n        else _default = true;\r\n\r\n\r\n        if(_default) {\r\n          audioState.refPitch.note = AUDIO_CFG.TONE_NAMES[0];\r\n          audioState.refPitch.noteNum = NaN;\r\n          audioState.pitchDelta = 0;\r\n        }\r\n\r\n\r\n        $scope.$digest();\r\n\r\n      });\r\n    }\r\n  \r\n})();\r\n\n(function() {\r\n    'use strict';\r\n    angular.module('app').controller('DbGaugeController', DbGaugeController); // for testing\r\n    angular.module('app').directive('dbGauge', function() {\r\n      return {\r\n        link: DbGaugeLink,\r\n        controllerAs: 'vm',\r\n        restrict: 'A',\r\n        scope: {},\r\n        controller: DbGaugeController,\r\n      }\r\n    });\r\n  \r\n    \r\n    function DbGaugeController($scope, AUDIO_CFG, audioState, Canvas2DHandler) {\r\n      var ctrl = this;\r\n\r\n      this.AUDIO_CFG = AUDIO_CFG;\r\n      this.audioState = audioState;\r\n      this.c2dh = Canvas2DHandler;\r\n      this.canvasWidth = null;\r\n      this.canvasHeight = null;\r\n      this.volumePosRange = null;\r\n      this.clipLinePosPct = 0.90;\r\n      this.clipColor = 'red';\r\n      this.volumeColor = '#3ae024';\r\n\r\n      $scope.$on('updateDbGauge', function(e, data) {\r\n        audioState.volumePct = Math.min(1.5, audioState.signal / AUDIO_CFG.SIGNAL_RANGE.clip); // 150% is max clip range\r\n\r\n        if(audioState.signal >= AUDIO_CFG.SIGNAL_RANGE.clip) {\r\n          audioState.clipping = true;\r\n          audioState.clipPct = (audioState.volumePct - 1) * 2; // 50% actual = 100% displayed\r\n        }\r\n\r\n        else {\r\n          audioState.clipping = false;\r\n        }\r\n      });\r\n\r\n      this.onCanvasSizeChange = function() {\r\n        ctrl.canvasWidth = ctrl.c2dh.canvas.width;\r\n        ctrl.canvasHeight = ctrl.c2dh.canvas.height;\r\n        ctrl.volumePosRange = {\r\n          min: 0,\r\n          max: ctrl.clipLinePosPct*ctrl.canvasWidth,\r\n        };\r\n      }\r\n\r\n      this.init = function(el) {\r\n        if(!(el instanceof HTMLCanvasElement)) {\r\n          throw 'InvalidCanvasError';\r\n        }\r\n\r\n        var canvas = el;\r\n        \r\n        canvas.height = 40;\r\n        ctrl.c2dh.setContext(canvas.getContext('2d'));\r\n        ctrl.onCanvasSizeChange(); // init these values\r\n        ctrl.draw(); // start draw cycle\r\n      }\r\n\r\n      this.draw = function(timeStamp) {\r\n        ctrl.c2dh.beginDraw();\r\n\r\n        // clip line\r\n        ctrl.c2dh.drawLine(\r\n          ctrl.volumePosRange.max, 0, \r\n          ctrl.volumePosRange.max, ctrl.canvasHeight,\r\n          ctrl.clipColor\r\n        );\r\n\r\n        // volume bar\r\n        if(ctrl.audioState.volumePct > 0) {\r\n          var clampedVolumePct = Math.min(1, ctrl.audioState.volumePct);\r\n\r\n          ctrl.c2dh.drawRect(\r\n            ctrl.volumePosRange.min, 0, \r\n            clampedVolumePct*ctrl.volumePosRange.max, ctrl.canvasHeight, \r\n            ctrl.volumeColor);\r\n        }\r\n\r\n        // clip bar\r\n        if(ctrl.audioState.clipping) {\r\n          ctrl.c2dh.drawRect(\r\n            ctrl.volumePosRange.max, 0, \r\n            ctrl.audioState.clipPct*ctrl.canvasWidth, ctrl.canvasHeight,\r\n            ctrl.clipColor\r\n          );\r\n        }\r\n\r\n        ctrl.c2dh.endDraw(ctrl.draw);\r\n      }\r\n    }\r\n\r\n    function DbGaugeLink($scope, $el, $attrs, $ctrl) {\r\n      try {\r\n        $ctrl.init($el[0]);\r\n      }\r\n      catch(e) {\r\n        console.error(e);\r\n      }\r\n    }\r\n  \r\n})();\r\n\n(function() {\r\n    'use strict';\r\n  \r\n    angular.module('app').component('appRoot', {\r\n      controller: AppController,\r\n      controllerAs: 'vm',\r\n      templateUrl: 'app/components/app/app.template.html',\r\n    });\r\n  \r\n    \r\n    function AppController($scope, getUserMedia, AUDIO_CFG, audioContext, AudioMath, audioState, Alerts) {\r\n\r\n      var ctrl = this;\r\n      ctrl.alerts = Alerts;\r\n      ctrl.viewAlerts = {\r\n        enableMicAlert: null,\r\n        notFoundAlert: null,\r\n        notSupportedAlert: null,\r\n        notAllowedAlert: null,\r\n        unknownAlert: null,\r\n      };\r\n\r\n      var prevAudioSignal = null;\r\n\r\n      ctrl.initAlerts = function() {\r\n        ctrl.viewAlerts.enableMicAlert = Alerts.addAlert('primary', 'inline-partials/enable-mic-alert.html', true, false);\r\n        ctrl.viewAlerts.notFoundAlert = Alerts.addAlert('danger', 'inline-partials/not-found-alert.html');\r\n        ctrl.viewAlerts.notSupportedAlert = Alerts.addAlert('danger', 'inline-partials/not-supported-alert.html');\r\n        ctrl.viewAlerts.notAllowedAlert = Alerts.addAlert('danger', 'inline-partials/not-allowed-alert.html');\r\n        ctrl.viewAlerts.unknownAlert = Alerts.addAlert('danger', 'inline-partials/unknown-alert.html');\r\n      }\r\n\r\n      ctrl.gUMSuccess = function(stream) {\r\n        try {\r\n          var mediaSourceState = audioState.mediaSource;\r\n          mediaSourceState.stream = audioContext.createMediaStreamSource(stream);\r\n\r\n          // using only 1 processor to make sure all gauges are reading from the exact same data\r\n          mediaSourceState.appProcessor = audioContext.createScriptProcessor(AUDIO_CFG.FFT_SIZE, 2, 1);\r\n          mediaSourceState.appProcessor.onaudioprocess = ctrl.onAudioProcess;\r\n  \r\n          mediaSourceState.stream.connect(mediaSourceState.appProcessor);\r\n          mediaSourceState.appProcessor.connect(audioContext.destination);\r\n  \r\n          ctrl.viewAlerts.enableMicAlert.close();\r\n          $scope.$digest();\r\n        }\r\n\r\n        catch(e) {\r\n          console.error(e);\r\n          ctrl.viewAlerts.unknownAlert.open();\r\n        }\r\n      };\r\n\r\n      ctrl.gUMError = function(err) {\r\n        switch(err.name) {\r\n          case 'NotFoundError':\r\n            ctrl.viewAlerts.notFoundAlert.open();\r\n            break;\r\n\r\n          case 'NotAllowedError':\r\n            ctrl.viewAlerts.notAllowedAlert.open();\r\n            break;\r\n\r\n          default:\r\n            console.error(err);\r\n            ctrl.viewAlerts.unknownAlert.open();\r\n            break;\r\n        }\r\n\r\n        $scope.$digest();\r\n      };\r\n\r\n      ctrl.$onInit = function() {\r\n        ctrl.initAlerts();\r\n      };\r\n\r\n      // istanbul ignore next\r\n      ctrl.selectInput = function(e) {\r\n        if(!getUserMedia) {\r\n          ctrl.viewAlerts.notSupportedAlert.open();\r\n          return;\r\n        }\r\n\r\n        getUserMedia.call(\r\n          navigator, \r\n          {\r\n            audio: {\r\n              mandatory: {\r\n                googEchoCancellation: false,\r\n                googAutoGainControl: false,\r\n                googNoiseSuppression: false,\r\n                googHighpassFilter: false,\r\n              }\r\n            }\r\n          },\r\n        ctrl.gUMSuccess,\r\n        ctrl.gUMError);\r\n        // .then(ctrl.gUMSuccess)\r\n        // .catch(ctrl.gUMError);\r\n      };\r\n\r\n      // tested onAudioProcess with a mock.\r\n      // istanbul ignore next\r\n      ctrl.onAudioProcess = function(e) {\r\n        var samples = e.inputBuffer.getChannelData(0);\r\n        var avgSignal = AudioMath.calculateAverageSignal(samples, AUDIO_CFG.SAMPLE_RATE, AUDIO_CFG.NFFT_SIZE);\r\n        avgSignal = Math.min(avgSignal, AUDIO_CFG.SIGNAL_RANGE.max);\r\n\r\n\r\n        // smooth\r\n        if(prevAudioSignal) {\r\n          audioState.signal = Math.max(avgSignal, prevAudioSignal*AUDIO_CFG.SMOOTHING_CONSTANT);\r\n        }\r\n        else {\r\n          audioState.signal = avgSignal;\r\n        }\r\n\r\n        $scope.$broadcast('updateDbGauge'); // need to update db gauge before anything else\r\n        $scope.$broadcast('updateRpm', { samples: samples });\r\n\r\n        prevAudioSignal = audioState.signal;\r\n      };\r\n      \r\n    }\r\n  \r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular.module('lib').service('Canvas2DHandler', Canvas2DHandler);\r\n\r\n    \r\n    function Canvas2DHandler(_, requestAnimationFrame) {\r\n        var _ctx = null;\r\n        this._rafId = null;\r\n        this.canvas = null;\r\n\r\n        this.setContext = function(ctx) {\r\n            if(ctx instanceof CanvasRenderingContext2D) {\r\n                _ctx = ctx;\r\n                this.canvas = _ctx.canvas;\r\n            }\r\n        }\r\n\r\n        this.getContext = function() {\r\n            if(_ctx instanceof CanvasRenderingContext2D)\r\n                return Object.create(_ctx);\r\n            else\r\n                return null;\r\n        }\r\n\r\n        this.clear = function() {\r\n            _ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n        }\r\n\r\n        this.drawRect = function(x, y, w, h, s) {\r\n            if(_ctx) {\r\n                _ctx.fillStyle = s;\r\n                _ctx.fillRect(x, y, w, h);\r\n            }\r\n        }\r\n\r\n        this.drawLine = function(x1, y1, x2, y2, s) {\r\n            if(_ctx) {\r\n                _ctx.beginPath();\r\n                _ctx.moveTo(x1, y1);\r\n                _ctx.lineTo(x2, y2);\r\n                _ctx.strokeStyle = s || 'black';\r\n                _ctx.stroke();\r\n                _ctx.closePath();\r\n            }\r\n        }\r\n\r\n        this.beginDraw = function() {\r\n            this.clear();\r\n        }\r\n\r\n        this.endDraw = function(rafCb) {\r\n            this._rafId = requestAnimationFrame(rafCb || function() {});\r\n        }\r\n    }\r\n    \r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular.module('lib').service('Alerts', AlertsService);\r\n\r\n    \r\n    function AlertsService(_) {\r\n        var srvc = this;\r\n        srvc.data = [];\r\n\r\n        srvc.addAlert = function(type, templateUrl, open, closeable, additionalClasses) {\r\n            /* istanbul ignore next */\r\n            open = (open !== undefined) ? open : false;\r\n            /* istanbul ignore next */\r\n            closeable = (closeable !== undefined) ? closeable : true;\r\n            /* istanbul ignore next */\r\n            additionalClasses = (additionalClasses !== undefined) ? additionalClasses : '';\r\n            \r\n            var alert = {\r\n                id: this.data.length,\r\n                type: type,\r\n                show: open,\r\n                templateUrl: templateUrl,\r\n                additionalClasses: additionalClasses,\r\n                closeable: closeable,\r\n            };\r\n\r\n            this.data.push(alert);\r\n\r\n            var alertHandle = {\r\n                open: function() {\r\n                    alert.show = true;\r\n                },\r\n\r\n                close: function() {\r\n                    alert.show = false;\r\n                },\r\n\r\n                remove: function() {\r\n                    srvc.removeAlert(alert.id);\r\n                },\r\n            };\r\n\r\n            return alertHandle;\r\n        }\r\n\r\n        srvc.removeAlert = function(id) {\r\n            _.forEach(this.data, function(alert, i) {\r\n                /* istanbul ignore else */\r\n                if(alert.id === id) {\r\n                    srvc.data.splice(i, 1);\r\n                    return false;\r\n                }\r\n            });\r\n        };\r\n\r\n        srvc.openAlert = function(id) {\r\n            _.forEach(this.data, function(alert) {\r\n                /* istanbul ignore else */\r\n                if(alert.id === id) {\r\n                    alert.show = true;\r\n                    return false;\r\n                }\r\n            });\r\n        };\r\n\r\n        srvc.closeAlert = function(id) {\r\n            _.forEach(this.data, function(alert) {\r\n                /* istanbul ignore else */\r\n                if(alert.id === id) {\r\n                    alert.show = false;\r\n                    return false;\r\n                }\r\n            });\r\n        };\r\n\r\n        srvc.openAll = function() {\r\n            _.map(this.data, function(alert) {\r\n                alert.show = true;\r\n            });\r\n        };\r\n\r\n        srvc.closeAll = function() {\r\n            _.map(this.data, function(alert) {\r\n                alert.show = false;\r\n            });\r\n        };\r\n\r\n        srvc.removeAll = function() {\r\n            this.data = [];\r\n        };\r\n    }\r\n    \r\n})();\r\n\n/*\r\nThe MIT License (MIT)\r\nCopyright (c) 2014 Chris Wilson\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n*/\r\n\r\nvar pitchDetect = {};\r\n\r\npitchDetect.noteFromPitch = function( frequency ) {\r\n\tvar noteNum = 12 * (Math.log( frequency / 440 )/Math.log(2) );\r\n\treturn Math.round( noteNum ) + 69;\r\n}\r\n\r\npitchDetect.frequencyFromNoteNumber = function( note ) {\r\n\treturn 440 * Math.pow(2,(note-69)/12);\r\n}\r\n\r\npitchDetect.centsOffFromPitch = function( frequency, note ) {\r\n\treturn Math.floor( 1200 * Math.log2( frequency / pitchDetect.frequencyFromNoteNumber( note )) );\r\n}\r\n\r\n// this is a float version of the algorithm below - but it's not currently used.\r\n/*\r\nfunction autoCorrelateFloat( buf, sampleRate ) {\r\n\tvar MIN_SAMPLES = 4;\t// corresponds to an 11kHz signal\r\n\tvar MAX_SAMPLES = 1000; // corresponds to a 44Hz signal\r\n\tvar SIZE = 1000;\r\n\tvar best_offset = -1;\r\n\tvar best_correlation = 0;\r\n\tvar rms = 0;\r\n\tif (buf.length < (SIZE + MAX_SAMPLES - MIN_SAMPLES))\r\n\t\treturn -1;  // Not enough data\r\n\tfor (var i=0;i<SIZE;i++)\r\n\t\trms += buf[i]*buf[i];\r\n\trms = Math.sqrt(rms/SIZE);\r\n\tfor (var offset = MIN_SAMPLES; offset <= MAX_SAMPLES; offset++) {\r\n\t\tvar correlation = 0;\r\n\t\tfor (var i=0; i<SIZE; i++) {\r\n\t\t\tcorrelation += Math.abs(buf[i]-buf[i+offset]);\r\n\t\t}\r\n\t\tcorrelation = 1 - (correlation/SIZE);\r\n\t\tif (correlation > best_correlation) {\r\n\t\t\tbest_correlation = correlation;\r\n\t\t\tbest_offset = offset;\r\n\t\t}\r\n\t}\r\n\tif ((rms>0.1)&&(best_correlation > 0.1)) {\r\n\t\tconsole.log(\"f = \" + sampleRate/best_offset + \"Hz (rms: \" + rms + \" confidence: \" + best_correlation + \")\");\r\n\t}\r\n//\tvar best_frequency = sampleRate/best_offset;\r\n}\r\n*/\r\n\r\nvar MIN_SAMPLES = 0;  // will be initialized when AudioContext is created.\r\nvar GOOD_ENOUGH_CORRELATION = 0.9; // this is the \"bar\" for how close a correlation needs to be\r\n\r\npitchDetect.autoCorrelate = function( buf, sampleRate ) {\r\n\tvar SIZE = buf.length;\r\n\tvar MAX_SAMPLES = Math.floor(SIZE/2);\r\n\tvar best_offset = -1;\r\n\tvar best_correlation = 0;\r\n\tvar rms = 0;\r\n\tvar foundGoodCorrelation = false;\r\n\tvar correlations = new Array(MAX_SAMPLES);\r\n\tvar i = 0;\r\n\r\n\tfor (i=0;i<SIZE;i++) {\r\n\t\tvar val = buf[i];\r\n\t\trms += val*val;\r\n\t}\r\n\trms = Math.sqrt(rms/SIZE);\r\n\t/* changed from 0.01 to 0.1 below */\r\n\tif (rms<0.1) // not enough signal\r\n\t\treturn -1;\r\n\r\n\t\r\n\r\n\tvar lastCorrelation=1;\r\n\tfor (var offset = MIN_SAMPLES; offset < MAX_SAMPLES; offset++) {\r\n\t\tvar correlation = 0;\r\n\r\n\t\tfor (i=0; i<MAX_SAMPLES; i++) {\r\n\t\t\tcorrelation += Math.abs((buf[i])-(buf[i+offset]));\r\n\t\t}\r\n\t\tcorrelation = 1 - (correlation/MAX_SAMPLES);\r\n\t\tcorrelations[offset] = correlation; // store it, for the tweaking we need to do below.\r\n\t\tif ((correlation>GOOD_ENOUGH_CORRELATION) && (correlation > lastCorrelation)) {\r\n\t\t\tfoundGoodCorrelation = true;\r\n\t\t\tif (correlation > best_correlation) {\r\n\t\t\t\tbest_correlation = correlation;\r\n\t\t\t\tbest_offset = offset;\r\n\t\t\t}\r\n\t\t} else if (foundGoodCorrelation) {\r\n\t\t\t// short-circuit - we found a good correlation, then a bad one, so we'd just be seeing copies from here.\r\n\t\t\t// Now we need to tweak the offset - by interpolating between the values to the left and right of the\r\n\t\t\t// best offset, and shifting it a bit.  This is complex, and HACKY in this code (happy to take PRs!) -\r\n\t\t\t// we need to do a curve fit on correlations[] around best_offset in order to better determine precise\r\n\t\t\t// (anti-aliased) offset.\r\n\r\n\t\t\t// we know best_offset >=1, \r\n\t\t\t// since foundGoodCorrelation cannot go to true until the second pass (offset=1), and \r\n\t\t\t// we can't drop into this clause until the following pass (else if).\r\n\t\t\tvar shift = (correlations[best_offset+1] - correlations[best_offset-1])/correlations[best_offset];  \r\n\t\t\treturn sampleRate/(best_offset+(8*shift));\r\n\t\t}\r\n\t\tlastCorrelation = correlation;\r\n\t}\r\n\tif (best_correlation > 0.01) {\r\n\t\t// console.log(\"f = \" + sampleRate/best_offset + \"Hz (rms: \" + rms + \" confidence: \" + best_correlation + \")\")\r\n\t\treturn sampleRate/best_offset;\r\n\t}\r\n\treturn -1;\r\n//\tvar best_frequency = sampleRate/best_offset;\r\n}\r\n\r\nwindow.pitchDetect = pitchDetect;\r\n\n(function() {\r\n    'use strict';\r\n  \r\n    angular.module('lib')\r\n    .constant('_', window._) // lodash\r\n    .constant('requestAnimationFrame', (window.requestAnimationFrame || window.webkitRequestAnimationFrame))\r\n    .constant('audioContext', new (window.AudioContext || window.webkitAudioContext || window.mozAudioContext)())\r\n    .constant('getUserMedia', window.navigator.getUserMedia)\r\n    .constant('pitchDetect', window.pitchDetect)\r\n    //.constant('browserDetails', window.adapter.browserDetails) // not used currently\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular.module('common')\r\n    \r\n    .constant('AUDIO_CFG', {\r\n        PITCH_DELTA_ABSOLUTE_THRESHOLD: 50, // cents\r\n        SAMPLE_RATE: 44100, // bit/s\r\n        FFT_SIZE: 2048, // sample block size\r\n        NFFT_SIZE: 1024, // FFT_SIZE / 2\r\n        SMOOTHING_CONSTANT: 0.7, // % 0.0 to 1.0\r\n        SIGNAL_RANGE: {\r\n            min: 0.1,\r\n            max: 4.9,\r\n            clip: 4.4,\r\n        },\r\n        TONE_NAMES: [\r\n            '--',\r\n            'C','C#','D','D#','E','F',\r\n            'F#','G','G#','A','A#','B',\r\n        ],\r\n    })\r\n\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n  \r\n    angular.module('common').run(runBlock);\r\n  \r\n    \r\n    function runBlock($log) {\r\n      $log.log('common' + '.run');\r\n    }\r\n  \r\n})();\r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular.module('app').run(runBlock);\r\n\r\n  \r\n  function runBlock($log) {\r\n    $log.log('app.run');\r\n  }\r\n\r\n})();\r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular.module('app').config(routerConfig);\r\n\r\n  \r\n  function routerConfig($stateProvider, $urlRouterProvider) {\r\n    $stateProvider.state('app', {\r\n      url: '/',\r\n      component: 'app',\r\n    });\r\n\r\n    $urlRouterProvider.otherwise('/');\r\n  }\r\n\r\n})();\r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular.module('app').config(configBlock);\r\n\r\n  \r\n  function configBlock($locationProvider, $logProvider) {\r\n    $locationProvider.\r\n        html5Mode(true);\r\n\r\n    $logProvider.\r\n        debugEnabled(true);\r\n  }\r\n\r\n})();\r\n\nangular.module('app').run(['$templateCache', function($templateCache) {$templateCache.put('index.html','<!DOCTYPE html><html ng-app=app><head><base href=/ ><meta charset=utf-8><meta name=viewport content=\"width=device-width,initial-scale=1\"><title>Pitch Tuner</title><!-- build:css({.tmp/serve,src}) styles/vendor.css --><!-- bower:css --><!-- run `gulp inject` to automatically populate bower styles dependencies --><!-- endbower --><!-- endbuild --><!-- build:css({.tmp/serve,src}) styles/app.css --><!-- inject:css --><!-- css files will be automatically insert here --><!-- endinject --><!-- endbuild --></head><body><app-root><div ui-view=\"\"></div></app-root><!-- build:js(src) scripts/vendor.js --><!-- bower:js --><!-- run `gulp inject` to automatically populate bower script dependencies --><!-- endbower --><!-- endbuild --><!-- build:js({.tmp/serve,.tmp/partials,src}) scripts/app.js --><!-- inject:js --><!-- js files will be automatically insert here --><!-- endinject --><!-- inject:partials --><!-- angular templates will be automatically converted in js and inserted here --><!-- endinject --><!-- endbuild --></body></html>');\n$templateCache.put('common/components/alerts/alerts.template.html','<div class=alerts><div ng-repeat=\"alert in vm.instance.data\"><div ng-if=\"alert.closeable && alert.show\"><div uib-alert ng-class=\"[\\'alert-\\' + (alert.type || alert.warning), alert.additionalClasses]\" close=vm.instance.closeAlert(alert.id)><div ng-include=alert.templateUrl></div></div></div><div ng-if=\"!alert.closeable && alert.show\"><div uib-alert ng-class=\"[\\'alert-\\' + (alert.type || alert.warning), alert.additionalClasses]\"><div ng-include=alert.templateUrl></div></div></div></div></div>');\n$templateCache.put('app/components/reference-pitch-monitor/reference-pitch-monitor.template.html','<div id=ref-pitch-monitor><div class=rpm-main><div class=ref-pitch><span class=ref-pitch-text>{{ audioState.refPitch.note }}</span></div><div class=pitch-delta><span class=pitch-delta-text>[{{ audioState.pitchDelta }} cents]</span></div></div></div>');\n$templateCache.put('app/components/app/app.template.html','<div class=container-fluid><div class=\"row text-center\"><div class=\"col-md-10 col-md-offset-1\"><alerts instance=vm.alerts tpl-scope=vm></alerts></div></div><div class=widget-row><canvas class=\"col-md-3 col-sm-6 col-xs-5 widget\" db-gauge></canvas><div class=\"col-md-4 col-xs-7 widget\"><reference-pitch-monitor></reference-pitch-monitor></div></div></div><script type=text/ng-template id=inline-partials/enable-mic-alert.html><button class=\"btn btn-primary\" ng-click=\"vm.tplScope.selectInput()\">ENABLE YOUR MIC</button></script><script type=text/ng-template id=inline-partials/not-found-alert.html><strong>Oops!</strong> Please make sure your microphone is plugged in.</script><script type=text/ng-template id=inline-partials/not-supported-alert.html><strong>Oops!</strong> Microphone usage isn\\'t supported on this browser. \\r\\n    Please upgrade to the latest version of \\r\\n    <a href=\"https://www.google.com/intl/en/chrome/browser/desktop/index.html\">Google Chrome</a>\\r\\n    or\\r\\n    <a href=\"https://www.google.com/intl/en/chrome/browser/desktop/index.html\">Mozilla Firefox</a>\\r\\n    or\\r\\n    any browser that supports microphone input.</script><script type=text/ng-template id=inline-partials/not-allowed-alert.html><strong>Oops!</strong> You denied microphone usage. Refresh the page if the <i>ENABLE YOUR MIC</i> button doesn\\'t work.</script><script type=text/ng-template id=inline-partials/unknown-alert.html><strong>Oops!</strong> An unknown error occurred.</script>');\n$templateCache.put('common/components/page.collection/page/page.template.html','<div class=\"container-fluid page\"><ng-transclude></ng-transclude></div>');\n$templateCache.put('common/components/page.collection/page-header/page-header.template.html','<header class=\"jumbotron row page-header-x\"><div class=\"container-fluid header-content-container\"><div class=\"col-lg-12 header-content\"><span id=header-version>{{ vm.version }}</span> <span id=header-logo>[ LOGO ]</span></div></div></header>');\n$templateCache.put('common/components/page.collection/page-content/page-content.template.html','<div class=\"row page-content\"><div class=col-md-12><ng-transclude></ng-transclude></div></div>');\n$templateCache.put('common/components/page.collection/page-footer/page-footer.template.html','<footer class=\"row page-footer\"><div class=\"col-md-12 page-footer-section\"><a href=# class=\"fa fa-2x fa-twitter-square social-link\" aria-hidden=true></a> <a href=# class=\"fa fa-2x fa-facebook-square social-link\" aria-hidden=true></a> <a href=# class=\"fa fa-2x fa-instagram social-link\" aria-hidden=true></a></div><div class=col-md-12>\\xA9 2017 Copyright: <a href=#>localhost</a></div></footer>');}]);"],"sourceRoot":"/source/"}